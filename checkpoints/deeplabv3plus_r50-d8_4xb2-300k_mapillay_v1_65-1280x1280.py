auto_scale_lr = dict(base_batch_size=8, enable=False)
crop_size = (
    1280,
    1280,
)
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        1280,
        1280,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/mapillary/'
dataset_type = 'MapillaryDataset_v1'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=30000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
iters = 300000
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
metainfo = dict(
    classes=(
        'Bird',
        'Ground Animal',
        'Curb',
        'Fence',
        'Guard Rail',
        'Barrier',
        'Wall',
        'Bike Lane',
        'Crosswalk - Plain',
        'Curb Cut',
        'Parking',
        'Pedestrian Area',
        'Rail Track',
        'Road',
        'Service Lane',
        'Sidewalk',
        'Bridge',
        'Building',
        'Tunnel',
        'Person',
        'Bicyclist',
        'Motorcyclist',
        'Other Rider',
        'Lane Marking - Crosswalk',
        'Lane Marking - General',
        'Mountain',
        'Sand',
        'Sky',
        'Snow',
        'Terrain',
        'Vegetation',
        'Water',
        'Banner',
        'Bench',
        'Bike Rack',
        'Billboard',
        'Catch Basin',
        'CCTV Camera',
        'Fire Hydrant',
        'Junction Box',
        'Mailbox',
        'Manhole',
        'Phone Booth',
        'Pothole',
        'Street Light',
        'Pole',
        'Traffic Sign Frame',
        'Utility Pole',
        'Traffic Light',
        'Traffic Sign (Back)',
        'Traffic Sign (Front)',
        'Trash Can',
        'Bicycle',
        'Boat',
        'Bus',
        'Car',
        'Caravan',
        'Motorcycle',
        'On Rails',
        'Other Vehicle',
        'Trailer',
        'Truck',
        'Wheeled Slow',
        'Car Mount',
        'Ego Vehicle',
    ),
    palette=[
        [
            165,
            42,
            42,
        ],
        [
            0,
            192,
            0,
        ],
        [
            196,
            196,
            196,
        ],
        [
            190,
            153,
            153,
        ],
        [
            180,
            165,
            180,
        ],
        [
            90,
            120,
            150,
        ],
        [
            102,
            102,
            156,
        ],
        [
            128,
            64,
            255,
        ],
        [
            140,
            140,
            200,
        ],
        [
            170,
            170,
            170,
        ],
        [
            250,
            170,
            160,
        ],
        [
            96,
            96,
            96,
        ],
        [
            230,
            150,
            140,
        ],
        [
            128,
            64,
            128,
        ],
        [
            110,
            110,
            110,
        ],
        [
            244,
            35,
            232,
        ],
        [
            150,
            100,
            100,
        ],
        [
            70,
            70,
            70,
        ],
        [
            150,
            120,
            90,
        ],
        [
            220,
            20,
            60,
        ],
        [
            255,
            0,
            0,
        ],
        [
            255,
            0,
            100,
        ],
        [
            255,
            0,
            200,
        ],
        [
            200,
            128,
            128,
        ],
        [
            255,
            255,
            255,
        ],
        [
            64,
            170,
            64,
        ],
        [
            230,
            160,
            50,
        ],
        [
            70,
            130,
            180,
        ],
        [
            190,
            255,
            255,
        ],
        [
            152,
            251,
            152,
        ],
        [
            107,
            142,
            35,
        ],
        [
            0,
            170,
            30,
        ],
        [
            255,
            255,
            128,
        ],
        [
            250,
            0,
            30,
        ],
        [
            100,
            140,
            180,
        ],
        [
            220,
            220,
            220,
        ],
        [
            220,
            128,
            128,
        ],
        [
            222,
            40,
            40,
        ],
        [
            100,
            170,
            30,
        ],
        [
            40,
            40,
            40,
        ],
        [
            33,
            33,
            33,
        ],
        [
            100,
            128,
            160,
        ],
        [
            142,
            0,
            0,
        ],
        [
            70,
            100,
            150,
        ],
        [
            210,
            170,
            100,
        ],
        [
            153,
            153,
            153,
        ],
        [
            128,
            128,
            128,
        ],
        [
            0,
            0,
            80,
        ],
        [
            250,
            170,
            30,
        ],
        [
            192,
            192,
            192,
        ],
        [
            220,
            220,
            0,
        ],
        [
            140,
            140,
            20,
        ],
        [
            119,
            11,
            32,
        ],
        [
            150,
            0,
            255,
        ],
        [
            0,
            60,
            100,
        ],
        [
            0,
            0,
            142,
        ],
        [
            0,
            0,
            90,
        ],
        [
            0,
            0,
            230,
        ],
        [
            0,
            80,
            100,
        ],
        [
            128,
            64,
            64,
        ],
        [
            0,
            0,
            110,
        ],
        [
            0,
            0,
            70,
        ],
        [
            0,
            0,
            192,
        ],
        [
            32,
            32,
            32,
        ],
        [
            120,
            10,
            10,
        ],
    ])
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=1024,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=65,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        contract_dilation=True,
        depth=50,
        dilations=(
            1,
            1,
            2,
            4,
        ),
        frozen_stages=4,
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        norm_eval=False,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        strides=(
            1,
            2,
            1,
            1,
        ),
        style='pytorch',
        type='ResNetV1c'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            1280,
            1280,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        c1_channels=48,
        c1_in_channels=256,
        channels=512,
        dilations=(
            1,
            12,
            24,
            36,
        ),
        dropout_ratio=0.1,
        in_channels=2048,
        in_index=3,
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=65,
        type='DepthwiseSeparableASPPHead'),
    pretrained='open-mmlab://resnet50_v1c',
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    clip_grad=dict(max_norm=0.01, norm_type=2),
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.0001, type='AdamW', weight_decay=0.0001),
    paramwise_cfg=dict(
        custom_keys=dict(backbone=dict(decay_mult=1.0, lr_mult=0.1))),
    type='OptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ), lr=0.0001, type='AdamW', weight_decay=0.0001)
param_scheduler = [
    dict(
        begin=0,
        by_epoch=False,
        end=300000,
        eta_min=0,
        power=0.9,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='validation/images',
            seg_map_path='validation/v1.2/labels'),
        data_root='data/mapillary/',
        metainfo=dict(
            classes=(
                'Bird',
                'Ground Animal',
                'Curb',
                'Fence',
                'Guard Rail',
                'Barrier',
                'Wall',
                'Bike Lane',
                'Crosswalk - Plain',
                'Curb Cut',
                'Parking',
                'Pedestrian Area',
                'Rail Track',
                'Road',
                'Service Lane',
                'Sidewalk',
                'Bridge',
                'Building',
                'Tunnel',
                'Person',
                'Bicyclist',
                'Motorcyclist',
                'Other Rider',
                'Lane Marking - Crosswalk',
                'Lane Marking - General',
                'Mountain',
                'Sand',
                'Sky',
                'Snow',
                'Terrain',
                'Vegetation',
                'Water',
                'Banner',
                'Bench',
                'Bike Rack',
                'Billboard',
                'Catch Basin',
                'CCTV Camera',
                'Fire Hydrant',
                'Junction Box',
                'Mailbox',
                'Manhole',
                'Phone Booth',
                'Pothole',
                'Street Light',
                'Pole',
                'Traffic Sign Frame',
                'Utility Pole',
                'Traffic Light',
                'Traffic Sign (Back)',
                'Traffic Sign (Front)',
                'Trash Can',
                'Bicycle',
                'Boat',
                'Bus',
                'Car',
                'Caravan',
                'Motorcycle',
                'On Rails',
                'Other Vehicle',
                'Trailer',
                'Truck',
                'Wheeled Slow',
                'Car Mount',
                'Ego Vehicle',
            ),
            palette=[
                [
                    165,
                    42,
                    42,
                ],
                [
                    0,
                    192,
                    0,
                ],
                [
                    196,
                    196,
                    196,
                ],
                [
                    190,
                    153,
                    153,
                ],
                [
                    180,
                    165,
                    180,
                ],
                [
                    90,
                    120,
                    150,
                ],
                [
                    102,
                    102,
                    156,
                ],
                [
                    128,
                    64,
                    255,
                ],
                [
                    140,
                    140,
                    200,
                ],
                [
                    170,
                    170,
                    170,
                ],
                [
                    250,
                    170,
                    160,
                ],
                [
                    96,
                    96,
                    96,
                ],
                [
                    230,
                    150,
                    140,
                ],
                [
                    128,
                    64,
                    128,
                ],
                [
                    110,
                    110,
                    110,
                ],
                [
                    244,
                    35,
                    232,
                ],
                [
                    150,
                    100,
                    100,
                ],
                [
                    70,
                    70,
                    70,
                ],
                [
                    150,
                    120,
                    90,
                ],
                [
                    220,
                    20,
                    60,
                ],
                [
                    255,
                    0,
                    0,
                ],
                [
                    255,
                    0,
                    100,
                ],
                [
                    255,
                    0,
                    200,
                ],
                [
                    200,
                    128,
                    128,
                ],
                [
                    255,
                    255,
                    255,
                ],
                [
                    64,
                    170,
                    64,
                ],
                [
                    230,
                    160,
                    50,
                ],
                [
                    70,
                    130,
                    180,
                ],
                [
                    190,
                    255,
                    255,
                ],
                [
                    152,
                    251,
                    152,
                ],
                [
                    107,
                    142,
                    35,
                ],
                [
                    0,
                    170,
                    30,
                ],
                [
                    255,
                    255,
                    128,
                ],
                [
                    250,
                    0,
                    30,
                ],
                [
                    100,
                    140,
                    180,
                ],
                [
                    220,
                    220,
                    220,
                ],
                [
                    220,
                    128,
                    128,
                ],
                [
                    222,
                    40,
                    40,
                ],
                [
                    100,
                    170,
                    30,
                ],
                [
                    40,
                    40,
                    40,
                ],
                [
                    33,
                    33,
                    33,
                ],
                [
                    100,
                    128,
                    160,
                ],
                [
                    142,
                    0,
                    0,
                ],
                [
                    70,
                    100,
                    150,
                ],
                [
                    210,
                    170,
                    100,
                ],
                [
                    153,
                    153,
                    153,
                ],
                [
                    128,
                    128,
                    128,
                ],
                [
                    0,
                    0,
                    80,
                ],
                [
                    250,
                    170,
                    30,
                ],
                [
                    192,
                    192,
                    192,
                ],
                [
                    220,
                    220,
                    0,
                ],
                [
                    140,
                    140,
                    20,
                ],
                [
                    119,
                    11,
                    32,
                ],
                [
                    150,
                    0,
                    255,
                ],
                [
                    0,
                    60,
                    100,
                ],
                [
                    0,
                    0,
                    142,
                ],
                [
                    0,
                    0,
                    90,
                ],
                [
                    0,
                    0,
                    230,
                ],
                [
                    0,
                    80,
                    100,
                ],
                [
                    128,
                    64,
                    64,
                ],
                [
                    0,
                    0,
                    110,
                ],
                [
                    0,
                    0,
                    70,
                ],
                [
                    0,
                    0,
                    192,
                ],
                [
                    32,
                    32,
                    32,
                ],
                [
                    120,
                    10,
                    10,
                ],
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='MapillaryDataset_v1'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        2048,
        1024,
    ), type='Resize'),
    dict(type='LoadAnnotations'),
    dict(type='PackSegInputs'),
]
train_cfg = dict(
    max_iters=300000, type='IterBasedTrainLoop', val_interval=30000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='training/images', seg_map_path='training/v1.2/labels'),
        data_root='data/mapillary/',
        metainfo=dict(
            classes=(
                'Bird',
                'Ground Animal',
                'Curb',
                'Fence',
                'Guard Rail',
                'Barrier',
                'Wall',
                'Bike Lane',
                'Crosswalk - Plain',
                'Curb Cut',
                'Parking',
                'Pedestrian Area',
                'Rail Track',
                'Road',
                'Service Lane',
                'Sidewalk',
                'Bridge',
                'Building',
                'Tunnel',
                'Person',
                'Bicyclist',
                'Motorcyclist',
                'Other Rider',
                'Lane Marking - Crosswalk',
                'Lane Marking - General',
                'Mountain',
                'Sand',
                'Sky',
                'Snow',
                'Terrain',
                'Vegetation',
                'Water',
                'Banner',
                'Bench',
                'Bike Rack',
                'Billboard',
                'Catch Basin',
                'CCTV Camera',
                'Fire Hydrant',
                'Junction Box',
                'Mailbox',
                'Manhole',
                'Phone Booth',
                'Pothole',
                'Street Light',
                'Pole',
                'Traffic Sign Frame',
                'Utility Pole',
                'Traffic Light',
                'Traffic Sign (Back)',
                'Traffic Sign (Front)',
                'Trash Can',
                'Bicycle',
                'Boat',
                'Bus',
                'Car',
                'Caravan',
                'Motorcycle',
                'On Rails',
                'Other Vehicle',
                'Trailer',
                'Truck',
                'Wheeled Slow',
                'Car Mount',
                'Ego Vehicle',
            ),
            palette=[
                [
                    165,
                    42,
                    42,
                ],
                [
                    0,
                    192,
                    0,
                ],
                [
                    196,
                    196,
                    196,
                ],
                [
                    190,
                    153,
                    153,
                ],
                [
                    180,
                    165,
                    180,
                ],
                [
                    90,
                    120,
                    150,
                ],
                [
                    102,
                    102,
                    156,
                ],
                [
                    128,
                    64,
                    255,
                ],
                [
                    140,
                    140,
                    200,
                ],
                [
                    170,
                    170,
                    170,
                ],
                [
                    250,
                    170,
                    160,
                ],
                [
                    96,
                    96,
                    96,
                ],
                [
                    230,
                    150,
                    140,
                ],
                [
                    128,
                    64,
                    128,
                ],
                [
                    110,
                    110,
                    110,
                ],
                [
                    244,
                    35,
                    232,
                ],
                [
                    150,
                    100,
                    100,
                ],
                [
                    70,
                    70,
                    70,
                ],
                [
                    150,
                    120,
                    90,
                ],
                [
                    220,
                    20,
                    60,
                ],
                [
                    255,
                    0,
                    0,
                ],
                [
                    255,
                    0,
                    100,
                ],
                [
                    255,
                    0,
                    200,
                ],
                [
                    200,
                    128,
                    128,
                ],
                [
                    255,
                    255,
                    255,
                ],
                [
                    64,
                    170,
                    64,
                ],
                [
                    230,
                    160,
                    50,
                ],
                [
                    70,
                    130,
                    180,
                ],
                [
                    190,
                    255,
                    255,
                ],
                [
                    152,
                    251,
                    152,
                ],
                [
                    107,
                    142,
                    35,
                ],
                [
                    0,
                    170,
                    30,
                ],
                [
                    255,
                    255,
                    128,
                ],
                [
                    250,
                    0,
                    30,
                ],
                [
                    100,
                    140,
                    180,
                ],
                [
                    220,
                    220,
                    220,
                ],
                [
                    220,
                    128,
                    128,
                ],
                [
                    222,
                    40,
                    40,
                ],
                [
                    100,
                    170,
                    30,
                ],
                [
                    40,
                    40,
                    40,
                ],
                [
                    33,
                    33,
                    33,
                ],
                [
                    100,
                    128,
                    160,
                ],
                [
                    142,
                    0,
                    0,
                ],
                [
                    70,
                    100,
                    150,
                ],
                [
                    210,
                    170,
                    100,
                ],
                [
                    153,
                    153,
                    153,
                ],
                [
                    128,
                    128,
                    128,
                ],
                [
                    0,
                    0,
                    80,
                ],
                [
                    250,
                    170,
                    30,
                ],
                [
                    192,
                    192,
                    192,
                ],
                [
                    220,
                    220,
                    0,
                ],
                [
                    140,
                    140,
                    20,
                ],
                [
                    119,
                    11,
                    32,
                ],
                [
                    150,
                    0,
                    255,
                ],
                [
                    0,
                    60,
                    100,
                ],
                [
                    0,
                    0,
                    142,
                ],
                [
                    0,
                    0,
                    90,
                ],
                [
                    0,
                    0,
                    230,
                ],
                [
                    0,
                    80,
                    100,
                ],
                [
                    128,
                    64,
                    64,
                ],
                [
                    0,
                    0,
                    110,
                ],
                [
                    0,
                    0,
                    70,
                ],
                [
                    0,
                    0,
                    192,
                ],
                [
                    32,
                    32,
                    32,
                ],
                [
                    120,
                    10,
                    10,
                ],
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    1024,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    1024,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='MapillaryDataset_v1'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        keep_ratio=True,
        ratio_range=(
            0.5,
            2.0,
        ),
        scale=(
            2048,
            1024,
        ),
        type='RandomResize'),
    dict(cat_max_ratio=0.75, crop_size=(
        512,
        1024,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(type='PackSegInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(file_client_args=dict(backend='disk'), type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='validation/images',
            seg_map_path='validation/v1.2/labels'),
        data_root='data/mapillary/',
        metainfo=dict(
            classes=(
                'Bird',
                'Ground Animal',
                'Curb',
                'Fence',
                'Guard Rail',
                'Barrier',
                'Wall',
                'Bike Lane',
                'Crosswalk - Plain',
                'Curb Cut',
                'Parking',
                'Pedestrian Area',
                'Rail Track',
                'Road',
                'Service Lane',
                'Sidewalk',
                'Bridge',
                'Building',
                'Tunnel',
                'Person',
                'Bicyclist',
                'Motorcyclist',
                'Other Rider',
                'Lane Marking - Crosswalk',
                'Lane Marking - General',
                'Mountain',
                'Sand',
                'Sky',
                'Snow',
                'Terrain',
                'Vegetation',
                'Water',
                'Banner',
                'Bench',
                'Bike Rack',
                'Billboard',
                'Catch Basin',
                'CCTV Camera',
                'Fire Hydrant',
                'Junction Box',
                'Mailbox',
                'Manhole',
                'Phone Booth',
                'Pothole',
                'Street Light',
                'Pole',
                'Traffic Sign Frame',
                'Utility Pole',
                'Traffic Light',
                'Traffic Sign (Back)',
                'Traffic Sign (Front)',
                'Trash Can',
                'Bicycle',
                'Boat',
                'Bus',
                'Car',
                'Caravan',
                'Motorcycle',
                'On Rails',
                'Other Vehicle',
                'Trailer',
                'Truck',
                'Wheeled Slow',
                'Car Mount',
                'Ego Vehicle',
            ),
            palette=[
                [
                    165,
                    42,
                    42,
                ],
                [
                    0,
                    192,
                    0,
                ],
                [
                    196,
                    196,
                    196,
                ],
                [
                    190,
                    153,
                    153,
                ],
                [
                    180,
                    165,
                    180,
                ],
                [
                    90,
                    120,
                    150,
                ],
                [
                    102,
                    102,
                    156,
                ],
                [
                    128,
                    64,
                    255,
                ],
                [
                    140,
                    140,
                    200,
                ],
                [
                    170,
                    170,
                    170,
                ],
                [
                    250,
                    170,
                    160,
                ],
                [
                    96,
                    96,
                    96,
                ],
                [
                    230,
                    150,
                    140,
                ],
                [
                    128,
                    64,
                    128,
                ],
                [
                    110,
                    110,
                    110,
                ],
                [
                    244,
                    35,
                    232,
                ],
                [
                    150,
                    100,
                    100,
                ],
                [
                    70,
                    70,
                    70,
                ],
                [
                    150,
                    120,
                    90,
                ],
                [
                    220,
                    20,
                    60,
                ],
                [
                    255,
                    0,
                    0,
                ],
                [
                    255,
                    0,
                    100,
                ],
                [
                    255,
                    0,
                    200,
                ],
                [
                    200,
                    128,
                    128,
                ],
                [
                    255,
                    255,
                    255,
                ],
                [
                    64,
                    170,
                    64,
                ],
                [
                    230,
                    160,
                    50,
                ],
                [
                    70,
                    130,
                    180,
                ],
                [
                    190,
                    255,
                    255,
                ],
                [
                    152,
                    251,
                    152,
                ],
                [
                    107,
                    142,
                    35,
                ],
                [
                    0,
                    170,
                    30,
                ],
                [
                    255,
                    255,
                    128,
                ],
                [
                    250,
                    0,
                    30,
                ],
                [
                    100,
                    140,
                    180,
                ],
                [
                    220,
                    220,
                    220,
                ],
                [
                    220,
                    128,
                    128,
                ],
                [
                    222,
                    40,
                    40,
                ],
                [
                    100,
                    170,
                    30,
                ],
                [
                    40,
                    40,
                    40,
                ],
                [
                    33,
                    33,
                    33,
                ],
                [
                    100,
                    128,
                    160,
                ],
                [
                    142,
                    0,
                    0,
                ],
                [
                    70,
                    100,
                    150,
                ],
                [
                    210,
                    170,
                    100,
                ],
                [
                    153,
                    153,
                    153,
                ],
                [
                    128,
                    128,
                    128,
                ],
                [
                    0,
                    0,
                    80,
                ],
                [
                    250,
                    170,
                    30,
                ],
                [
                    192,
                    192,
                    192,
                ],
                [
                    220,
                    220,
                    0,
                ],
                [
                    140,
                    140,
                    20,
                ],
                [
                    119,
                    11,
                    32,
                ],
                [
                    150,
                    0,
                    255,
                ],
                [
                    0,
                    60,
                    100,
                ],
                [
                    0,
                    0,
                    142,
                ],
                [
                    0,
                    0,
                    90,
                ],
                [
                    0,
                    0,
                    230,
                ],
                [
                    0,
                    80,
                    100,
                ],
                [
                    128,
                    64,
                    64,
                ],
                [
                    0,
                    0,
                    110,
                ],
                [
                    0,
                    0,
                    70,
                ],
                [
                    0,
                    0,
                    192,
                ],
                [
                    32,
                    32,
                    32,
                ],
                [
                    120,
                    10,
                    10,
                ],
            ]),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                1024,
            ), type='Resize'),
            dict(type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='MapillaryDataset_v1'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
